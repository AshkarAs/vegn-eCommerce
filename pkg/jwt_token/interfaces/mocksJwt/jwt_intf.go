// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/jwt_token/interfaces/jwt_intf.go

// Package mocksJwt is a generated GoMock package.
package mocksJwt

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIJwt is a mock of IJwt interface.
type MockIJwt struct {
	ctrl     *gomock.Controller
	recorder *MockIJwtMockRecorder
}

// MockIJwtMockRecorder is the mock recorder for MockIJwt.
type MockIJwtMockRecorder struct {
	mock *MockIJwt
}

// NewMockIJwt creates a new mock instance.
func NewMockIJwt(ctrl *gomock.Controller) *MockIJwt {
	mock := &MockIJwt{ctrl: ctrl}
	mock.recorder = &MockIJwtMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJwt) EXPECT() *MockIJwtMockRecorder {
	return m.recorder
}

// GenerateAcessToken mocks base method.
func (m *MockIJwt) GenerateAcessToken(securityKey, id string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAcessToken", securityKey, id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateAcessToken indicates an expected call of GenerateAcessToken.
func (mr *MockIJwtMockRecorder) GenerateAcessToken(securityKey, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAcessToken", reflect.TypeOf((*MockIJwt)(nil).GenerateAcessToken), securityKey, id)
}

// GenerateRefreshToken mocks base method.
func (m *MockIJwt) GenerateRefreshToken(secretKey string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRefreshToken", secretKey)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateRefreshToken indicates an expected call of GenerateRefreshToken.
func (mr *MockIJwtMockRecorder) GenerateRefreshToken(secretKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRefreshToken", reflect.TypeOf((*MockIJwt)(nil).GenerateRefreshToken), secretKey)
}

// TempTokenForOtpVerification mocks base method.
func (m *MockIJwt) TempTokenForOtpVerification(securityKey, phone string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TempTokenForOtpVerification", securityKey, phone)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TempTokenForOtpVerification indicates an expected call of TempTokenForOtpVerification.
func (mr *MockIJwtMockRecorder) TempTokenForOtpVerification(securityKey, phone interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TempTokenForOtpVerification", reflect.TypeOf((*MockIJwt)(nil).TempTokenForOtpVerification), securityKey, phone)
}

// UnbindPhoneFromClaim mocks base method.
func (m *MockIJwt) UnbindPhoneFromClaim(tokenString, tempVerificationKey string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnbindPhoneFromClaim", tokenString, tempVerificationKey)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnbindPhoneFromClaim indicates an expected call of UnbindPhoneFromClaim.
func (mr *MockIJwtMockRecorder) UnbindPhoneFromClaim(tokenString, tempVerificationKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnbindPhoneFromClaim", reflect.TypeOf((*MockIJwt)(nil).UnbindPhoneFromClaim), tokenString, tempVerificationKey)
}

// VerifyAccessToken mocks base method.
func (m *MockIJwt) VerifyAccessToken(token, secretkey string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyAccessToken", token, secretkey)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyAccessToken indicates an expected call of VerifyAccessToken.
func (mr *MockIJwtMockRecorder) VerifyAccessToken(token, secretkey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyAccessToken", reflect.TypeOf((*MockIJwt)(nil).VerifyAccessToken), token, secretkey)
}

// VerifyRefreshToken mocks base method.
func (m *MockIJwt) VerifyRefreshToken(accesToken, securityKey string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyRefreshToken", accesToken, securityKey)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyRefreshToken indicates an expected call of VerifyRefreshToken.
func (mr *MockIJwtMockRecorder) VerifyRefreshToken(accesToken, securityKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyRefreshToken", reflect.TypeOf((*MockIJwt)(nil).VerifyRefreshToken), accesToken, securityKey)
}
